plugins {
    id 'com.gradleup.shadow'
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }

    maven { url = "https://maven.createmod.net" } // Create, Ponder, Flywheel
    maven { url = "https://maven.ithundxr.dev/snapshots" } // Registrate
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive = false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')

    implementation("com.simibubi.create:create-$minecraft_version:$create_version:slim") { transitive = false }
    implementation("net.createmod.ponder:Ponder-NeoForge-$minecraft_version:$ponder_version")
    compileOnly("dev.engine-room.flywheel:flywheel-neoforge-api-$minecraft_version:$flywheel_version")
    runtimeOnly("dev.engine-room.flywheel:flywheel-neoforge-$minecraft_version:$flywheel_version")
    implementation("com.tterrag.registrate:Registrate:$registrate_version")
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: inputs.properties.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}

curseforge {
    apiKey = System.getenv("CURSEFORGE_TOKEN") == null ? '' : System.getenv("CURSEFORGE_TOKEN")
    project {
        id = '1368924'
        changelogType = 'markdown'
        changelog = rootProject.file("changelog.md")
        releaseType = 'release'
        addGameVersion '1.21.1'
        addGameVersion 'NeoForge'

        relations {
            requiredDependency 'create'
        }

        mainArtifact(jar) {
            displayName = "Create: Unclamped - NeoForge - $mod_version"
        }
    }
}

modrinth {
    loaders = ['neoforge']
    versionNumber = "$mod_version"
    versionName = "Create: Unclamped - NeoForge - $mod_version"
    dependencies {
        required.project 'create'
    }
}