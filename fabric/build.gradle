plugins {
    id 'com.gradleup.shadow'
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'ModMaven'
        url  = 'https://modmaven.dev/'
    }

    maven { url = "https://mvn.devos.one/releases" } // Porting Lib releases
    maven { url = "https://mvn.devos.one/snapshots" } // Create and several dependencies
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
    maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven" } // Forge Config API Port

    maven { // Fabric ASM for Porting Lib
        url = "https://jitpack.io/"
        content { includeGroupAndSubgroups("com.github") }
    }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:$rootProject.fabric_api_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive = false }
    shadowBundle project(path: ':common', configuration: 'transformProductionFabric')

    modImplementation("com.simibubi.create:create-fabric-$minecraft_version:$create_version")

    include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.5.0")))
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand version: inputs.properties.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}

String[] cv = create_version.split('-')

curseforge {
    apiKey = System.getenv("CURSEFORGE_TOKEN") == null ? '' : System.getenv("CURSEFORGE_TOKEN")
    project {
        id = '1368924'
        changelogType = 'markdown'
        changelog = rootProject.file("changelog.md")
        releaseType = 'release'
        addGameVersion '1.20.1'
        addGameVersion 'Fabric'

        relations {
            requiredDependency 'create'
        }

        mainArtifact(jar) {
            displayName = "Create: Unclamped $mod_version for Create ${cv[0]}.${cv[1]}"
        }
    }
}

modrinth {
    loaders = ['fabric']
    versionNumber = "$mod_version-${cv[0]}.${cv[1]}"
    versionName = "Create: Unclamped $mod_version for Create ${cv[0]}.${cv[1]}"
    dependencies {
        required.version 'create-fabric', "$create_version"
    }
}